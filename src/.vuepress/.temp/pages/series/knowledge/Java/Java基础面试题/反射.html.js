import comp from "F:/MyBlogSite/vuepress-theme-hope/my-docs/src/.vuepress/.temp/pages/series/knowledge/Java/Java基础面试题/反射.html.vue"
const data = JSON.parse("{\"path\":\"/series/knowledge/Java/Java%E5%9F%BA%E7%A1%80%E9%9D%A2%E8%AF%95%E9%A2%98/%E5%8F%8D%E5%B0%84.html\",\"title\":\"反射\",\"lang\":\"zh-CN\",\"frontmatter\":{\"order\":6},\"git\":{},\"readingTime\":{\"minutes\":2.02,\"words\":607},\"filePathRelative\":\"series/knowledge/Java/Java基础面试题/反射.md\",\"excerpt\":\"\\n<h2>什么是反射？</h2>\\n<p>Java反射机制是<strong>运行时动态获取类信息、操作对象成员</strong>的能力：</p>\\n<ul>\\n<li>对任意类，能获取其所有属性、方法、构造器等结构信息。</li>\\n<li>对任意对象，能调用其任意方法（包括私有方法）、访问/修改其任意字段（包括私有字段）。</li>\\n</ul>\\n<p>（此处应有\\\"Java反射获取类信息流程\\\"的示意图，图片名称：Java反射机制示意图）</p>\\n<h3>反射的核心特性</h3>\\n<ol>\\n<li><strong>运行时类信息访问</strong>：无需编译时知道类名，即可在运行时获取类的包名、父类、接口、成员等信息。</li>\\n<li><strong>动态对象创建</strong>：通过<code>Class.newInstance()</code>或<code>Constructor.newInstance()</code>，运行时动态创建对象（无需<code>new</code>关键字）。</li>\\n<li><strong>动态方法调用</strong>：通过<code>Method.invoke()</code>，运行时调用对象的方法（包括私有方法）。</li>\\n<li><strong>字段访问与修改</strong>：通过<code>Field.get()</code>/<code>Field.set()</code>，运行时访问/修改对象的字段（包括私有字段）。</li>\\n</ol>\"}")
export { comp, data }
