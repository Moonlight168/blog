import comp from "F:/MyBlogSite/vuepress-theme-hope/my-docs/src/.vuepress/.temp/pages/series/knowledge/Java/Java基础面试题/泛型.html.vue"
const data = JSON.parse("{\"path\":\"/series/knowledge/Java/Java%E5%9F%BA%E7%A1%80%E9%9D%A2%E8%AF%95%E9%A2%98/%E6%B3%9B%E5%9E%8B.html\",\"title\":\"泛型\",\"lang\":\"zh-CN\",\"frontmatter\":{\"order\":4},\"git\":{},\"readingTime\":{\"minutes\":0.96,\"words\":288},\"filePathRelative\":\"series/knowledge/Java/Java基础面试题/泛型.md\",\"excerpt\":\"\\n<h2>什么是泛型？</h2>\\n<p>泛型是Java的重要特性，允许类、接口、方法在定义时使用<strong>类型参数</strong>，使用时再指定具体类型。</p>\\n<p>其核心目的是<strong>编译时类型检查</strong>，避免运行时类型转换异常，同时提升代码复用性。</p>\\n<h3>为什么需要泛型？</h3>\\n<ol>\\n<li><strong>代码复用</strong>：无需为不同数据类型编写重复代码。例如，未用泛型时，需重载<code>add(int a, int b)</code>、<code>add(float a, float b)</code>等方法；用泛型后，可复用为一个方法：<div class=\\\"language-java line-numbers-mode\\\" data-highlighter=\\\"shiki\\\" data-ext=\\\"java\\\" style=\\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\\"><pre class=\\\"shiki shiki-themes one-light one-dark-pro vp-code\\\"><code class=\\\"language-java\\\"><span class=\\\"line\\\"><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\">private</span><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\"> static</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\\"> &lt;</span><span style=\\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\\">T</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\\"> extends Number</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\\">&gt;</span><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\"> double</span><span style=\\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\\"> add</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\\">(</span><span style=\\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\\">T</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\\"> a</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">,</span><span style=\\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\\"> T</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\\"> b) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\">    return</span><span style=\\\"--shiki-light:#E45649;--shiki-dark:#E5C07B\\\"> a</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">.</span><span style=\\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\\">doubleValue</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">()</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\\"> +</span><span style=\\\"--shiki-light:#E45649;--shiki-dark:#E5C07B\\\"> b</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">.</span><span style=\\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\\">doubleValue</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">();</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\\">}</span></span></code></pre>\\n<div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\" style=\\\"counter-reset:line-number 0\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div></li>\\n<li><strong>类型安全</strong>：编译时约束集合或方法的类型，避免存入错误类型数据。例如，未用泛型时，<code>List</code>可存入任意类型，取出时强制转换易出错；用泛型后，<code>List&lt;String&gt;</code>仅允许存入String，编译时即可拦截错误：<div class=\\\"language-java line-numbers-mode\\\" data-highlighter=\\\"shiki\\\" data-ext=\\\"java\\\" style=\\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\\"><pre class=\\\"shiki shiki-themes one-light one-dark-pro vp-code\\\"><code class=\\\"language-java\\\"><span class=\\\"line\\\"><span style=\\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\\">// 未用泛型（风险）</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\\">List</span><span style=\\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\\"> list </span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\\">=</span><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\"> new</span><span style=\\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\\"> ArrayList</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\\">()</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#E45649;--shiki-dark:#E5C07B\\\">list</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">.</span><span style=\\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\\">add</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">(</span><span style=\\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\\">\\\"string\\\"</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#E45649;--shiki-dark:#E5C07B\\\">list</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">.</span><span style=\\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\\">add</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">(</span><span style=\\\"--shiki-light:#986801;--shiki-dark:#D19A66\\\">100</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">);</span><span style=\\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\\"> // 允许存入Integer，取出时转换易出错</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\\">// 用泛型（安全）</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\\">List</span><span style=\\\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\\\">&lt;</span><span style=\\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\\">String</span><span style=\\\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\\\">&gt;</span><span style=\\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\\"> list </span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\\">=</span><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\"> new</span><span style=\\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\\"> ArrayList</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">&lt;&gt;</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\\">()</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#E45649;--shiki-dark:#E5C07B\\\">list</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">.</span><span style=\\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\\">add</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">(</span><span style=\\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\\">\\\"string\\\"</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#E45649;--shiki-dark:#E5C07B\\\">list</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">.</span><span style=\\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\\">add</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">(</span><span style=\\\"--shiki-light:#986801;--shiki-dark:#D19A66\\\">100</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">);</span><span style=\\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\\"> // 编译报错，不允许存入非String类型</span></span></code></pre>\\n<div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\" style=\\\"counter-reset:line-number 0\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div></li>\\n</ol>\"}")
export { comp, data }
