import comp from "F:/MyBlogSite/vuepress-theme-hope/my-docs/src/.vuepress/.temp/pages/series/knowledge/Java/Java基础面试题/关键字.html.vue"
const data = JSON.parse("{\"path\":\"/series/knowledge/Java/Java%E5%9F%BA%E7%A1%80%E9%9D%A2%E8%AF%95%E9%A2%98/%E5%85%B3%E9%94%AE%E5%AD%97.html\",\"title\":\"关键字\",\"lang\":\"zh-CN\",\"frontmatter\":{\"order\":16},\"git\":{},\"readingTime\":{\"minutes\":0.75,\"words\":224},\"filePathRelative\":\"series/knowledge/Java/Java基础面试题/关键字.md\",\"excerpt\":\"\\n<h2>Java 中 final 作用是什么？</h2>\\n<p><code>final</code>关键字主要用于修饰<strong>类、方法、变量</strong>，作用分别如下：</p>\\n<ol>\\n<li><strong>修饰类</strong>：该类不能被继承，是继承体系的最终形态。示例：Java的<code>String</code>类用<code>final</code>修饰，保证其不可变性和安全性，防止子类修改其行为。</li>\\n<li><strong>修饰方法</strong>：该方法不能在子类中被重写。示例：<code>java.lang.Object</code>的<code>getClass()</code>方法是<code>final</code>的，其行为由JVM底层实现，不允许子类修改。</li>\\n<li><strong>修饰变量</strong>：\\n<ul>\\n<li>基本数据类型：变量赋值后不能再修改（成为常量）。示例：<code>final int num = 10;</code>，<code>num</code>不能二次赋值。</li>\\n<li>引用数据类型：引用变量不能再指向其他对象，但对象内部内容可修改。示例：<code>final StringBuilder sb = new StringBuilder(\\\"Hello\\\");</code>，<code>sb</code>不能指向新对象，但可通过<code>sb.append(\\\"World\\\")</code>修改字符串内容。</li>\\n</ul>\\n</li>\\n</ol>\"}")
export { comp, data }
