import comp from "F:/MyBlogSite/vuepress-theme-hope/my-docs/src/.vuepress/.temp/pages/series/knowledge/Java/Java基础面试题/面对对象.html.vue"
const data = JSON.parse("{\"path\":\"/series/knowledge/Java/Java%E5%9F%BA%E7%A1%80%E9%9D%A2%E8%AF%95%E9%A2%98/%E9%9D%A2%E5%AF%B9%E5%AF%B9%E8%B1%A1.html\",\"title\":\"面向对象\",\"lang\":\"zh-CN\",\"frontmatter\":{\"order\":17},\"git\":{},\"readingTime\":{\"minutes\":11.72,\"words\":3516},\"filePathRelative\":\"series/knowledge/Java/Java基础面试题/面对对象.md\",\"excerpt\":\"\\n<h2>怎么理解面向对象？简单说说封装继承多态</h2>\\n<p>面向对象是一种编程范式，将现实世界中的事物抽象为<strong>对象</strong>——对象包含属性（数据）和行为（方法）。其设计思想以对象为中心，通过对象间的交互实现程序功能，具备灵活性和可扩展性，能通过封装、继承应对需求变化。</p>\\n<p>Java面向对象的三大特性：</p>\\n<ol>\\n<li><strong>封装</strong>：将对象的属性和行为结合，对外隐藏内部细节，仅通过接口与外界交互。目的是增强安全性、简化编程，使对象更独立。</li>\\n<li><strong>继承</strong>：子类自动共享父类数据结构和方法的机制，是代码复用的重要手段，能建立类的层次关系，使结构更清晰。</li>\\n<li><strong>多态</strong>：允许不同类的对象对同一消息作出响应（同一接口，不同实例执行不同操作）。分为编译时多态（重载）和运行时多态（重写），能提升程序灵活性和扩展性。</li>\\n</ol>\"}")
export { comp, data }
