import comp from "F:/MyBlogSite/vuepress-theme-hope/my-docs/src/.vuepress/.temp/pages/zh/series/knowledge/基础知识/算法与设计.html.vue"
const data = JSON.parse("{\"path\":\"/zh/series/knowledge/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%AE%97%E6%B3%95%E4%B8%8E%E8%AE%BE%E8%AE%A1.html\",\"title\":\"算法与设计\",\"lang\":\"en-US\",\"frontmatter\":{\"title\":\"算法与设计\",\"date\":\"2025-06-02T00:00:00.000Z\",\"series\":\"基础知识\"},\"readingTime\":{\"minutes\":2.68,\"words\":805},\"filePathRelative\":\"zh/series/knowledge/基础知识/算法与设计.md\",\"excerpt\":\"<h3><a class=\\\"header-anchor\\\" href=\\\"#_1-三数之和\\\"><span></span></a><a href=\\\"https://leetcode.cn/problems/3sum/description/?envType=study-plan-v2&amp;envId=top-100-liked\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">1.三数之和</a></h3>\\n<figure><figcaption>题目说明</figcaption></figure>\\n<div class=\\\"language-java line-numbers-mode\\\" data-highlighter=\\\"shiki\\\" data-ext=\\\"java\\\" style=\\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\\"><pre class=\\\"shiki shiki-themes one-light one-dark-pro vp-code\\\"><code class=\\\"language-java\\\"><span class=\\\"line\\\"><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\">class</span><span style=\\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\\"> Solution</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\">    public</span><span style=\\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\\"> List</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">&lt;</span><span style=\\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\\">List</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">&lt;</span><span style=\\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\\">Integer</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">&gt;&gt;</span><span style=\\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\\"> threeSum</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">(</span><span style=\\\"--shiki-light:#C18401;--shiki-dark:#C678DD\\\">int</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">[] </span><span style=\\\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\\\">nums</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">)</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\\">        List</span><span style=\\\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\\\">&lt;</span><span style=\\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\\">List</span><span style=\\\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\\\">&lt;</span><span style=\\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\\">Integer</span><span style=\\\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\\\">&gt;&gt; </span><span style=\\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\\">result</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\\"> =</span><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\"> new</span><span style=\\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\\"> ArrayList</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">&lt;&gt;();</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\\">        // 对数组进行排序，排序后便于使用双指针法，利用数组的有序性提高查找效率</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#E45649;--shiki-dark:#E5C07B\\\">        Arrays</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">.</span><span style=\\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\\">sort</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">(nums);</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\\">        // 遍历数组，i 作为第一个数的索引，最多遍历到倒数第三个元素，因为后面需要两个元素与它组成三元组</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\">        for</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\"> (</span><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\">int</span><span style=\\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\\"> i</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\\"> =</span><span style=\\\"--shiki-light:#986801;--shiki-dark:#D19A66\\\"> 0</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">; i </span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\\">&lt;</span><span style=\\\"--shiki-light:#E45649;--shiki-dark:#E5C07B\\\"> nums</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">.</span><span style=\\\"--shiki-light:#E45649;--shiki-dark:#E5C07B\\\">length</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\\"> -</span><span style=\\\"--shiki-light:#986801;--shiki-dark:#D19A66\\\"> 2</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">; i++) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\\">            // 跳过重复的 i 值，避免结果集中出现重复的三元组</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\">            if</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\"> (i </span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\\">&gt;</span><span style=\\\"--shiki-light:#986801;--shiki-dark:#D19A66\\\"> 0</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\\"> &amp;&amp;</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\"> nums[i] </span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\\">==</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\"> nums[i </span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\\">-</span><span style=\\\"--shiki-light:#986801;--shiki-dark:#D19A66\\\"> 1</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">]) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\">                continue</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">            }</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\\">            // 左指针初始化为 i 的下一个位置</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\">            int</span><span style=\\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\\"> left</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\\"> =</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\"> i </span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\\">+</span><span style=\\\"--shiki-light:#986801;--shiki-dark:#D19A66\\\"> 1</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\\">            // 右指针初始化为数组的最后一个位置</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\">            int</span><span style=\\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\\"> right</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\\"> =</span><span style=\\\"--shiki-light:#E45649;--shiki-dark:#E5C07B\\\"> nums</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">.</span><span style=\\\"--shiki-light:#E45649;--shiki-dark:#E5C07B\\\">length</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\\"> -</span><span style=\\\"--shiki-light:#986801;--shiki-dark:#D19A66\\\"> 1</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\\">            // 当左指针小于右指针时，继续循环查找满足条件的三元组</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\">            while</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\"> (left </span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\\">&lt;</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\"> right) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\\">                // 计算当前三个数的和</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\">                int</span><span style=\\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\\"> sum</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\\"> =</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\"> nums[i] </span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\\">+</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\"> nums[left] </span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\\">+</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\"> nums[right];</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\">                if</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\"> (sum </span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\\">==</span><span style=\\\"--shiki-light:#986801;--shiki-dark:#D19A66\\\"> 0</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\\">                    // 如果和为 0，说明找到了一个满足条件的三元组，将其加入结果集</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#E45649;--shiki-dark:#E5C07B\\\">                    result</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">.</span><span style=\\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\\">add</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">(</span><span style=\\\"--shiki-light:#E45649;--shiki-dark:#E5C07B\\\">Arrays</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">.</span><span style=\\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\\">asList</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">(nums[i], nums[left], nums[right]));</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\\">                    // 跳过重复的 left 值，避免结果集中出现重复的三元组</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\">                    while</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\"> (left </span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\\">&lt;</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\"> right </span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\\">&amp;&amp;</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\"> nums[left] </span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\\">==</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\"> nums[left </span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\\">+</span><span style=\\\"--shiki-light:#986801;--shiki-dark:#D19A66\\\"> 1</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">]) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">                        left++;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">                    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\\">                    // 跳过重复的 right 值，避免结果集中出现重复的三元组</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\">                    while</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\"> (left </span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\\">&lt;</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\"> right </span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\\">&amp;&amp;</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\"> nums[right] </span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\\">==</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\"> nums[right </span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\\">-</span><span style=\\\"--shiki-light:#986801;--shiki-dark:#D19A66\\\"> 1</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">]) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">                        right--;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">                    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\\">                    // 移动左指针和右指针，继续寻找下一个满足条件的三元组</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">                    left++;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">                    right--;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">                } </span><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\">else</span><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\"> if</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\"> (sum </span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\\">&lt;</span><span style=\\\"--shiki-light:#986801;--shiki-dark:#D19A66\\\"> 0</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\\">                    // 如果和小于 0，说明需要增大和，将左指针右移</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">                    left++;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">                } </span><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\">else</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\\">                    // 如果和大于 0，说明需要减小和，将右指针左移</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">                    right--;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">                }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">            }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">        }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\">        return</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\"> result;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">}</span></span></code></pre>\\n<div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\" style=\\\"counter-reset:line-number 0\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div>\"}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
