import comp from "F:/MyBlogSite/vuepress-theme-hope/my-docs/src/.vuepress/.temp/pages/blogs/基本概念/读写锁.html.vue"
const data = JSON.parse("{\"path\":\"/blogs/%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/%E8%AF%BB%E5%86%99%E9%94%81.html\",\"title\":\"读写锁\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"读写锁\",\"date\":\"2025-10-19T00:00:00.000Z\",\"category\":\"基本概念\",\"tags\":[\"多线程\"]},\"git\":{},\"readingTime\":{\"minutes\":3.65,\"words\":1094},\"filePathRelative\":\"blogs/基本概念/读写锁.md\",\"excerpt\":\"<h2>一、什么是读写锁</h2>\\n<p>读写锁（Read-Write Lock）是一种比普通互斥锁（Mutex）更细粒度的并发控制机制。它允许多个线程 <strong>同时读取共享资源</strong>，但在有线程执行写操作时，会 <strong>独占锁</strong>，阻塞其他读写线程。</p>\\n<p>读写锁通常包含两种状态：</p>\\n<ol>\\n<li><strong>读锁（共享锁，Read Lock）</strong>：多个线程可以同时获取读锁，前提是没有线程持有写锁。</li>\\n<li><strong>写锁（独占锁，Write Lock）</strong>：当线程持有写锁时，其他线程无法再获取任何锁（无论是读锁还是写锁）。</li>\\n</ol>\"}")
export { comp, data }
