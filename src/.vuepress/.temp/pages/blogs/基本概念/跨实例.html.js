import comp from "F:/MyBlogSite/vuepress-theme-hope/my-docs/src/.vuepress/.temp/pages/blogs/基本概念/跨实例.html.vue"
const data = JSON.parse("{\"path\":\"/blogs/%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/%E8%B7%A8%E5%AE%9E%E4%BE%8B.html\",\"title\":\"跨实例\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"跨实例\",\"date\":\"2025-10-19T00:00:00.000Z\",\"category\":\"基本概念\",\"tags\":[\"多线程\"]},\"git\":{},\"readingTime\":{\"minutes\":4.29,\"words\":1288},\"filePathRelative\":\"blogs/基本概念/跨实例.md\",\"excerpt\":\"<p>在分布式系统中，“跨实例”指的是<strong>多个独立部署的服务进程（实例），在协作处理同一任务或操作同一资源时的交互场景</strong>。简单说，就是“你的代码不是只在一台机器/一个进程里跑，而是在多台机器/多个进程里跑，这些进程之间需要协同工作”——这也是分布式系统区别于单体系统的核心特征，更是分布式锁要解决的核心问题。</p>\\n<h3>一、先理解“实例”：什么是服务实例？</h3>\\n<p>在解释“跨实例”前，先明确“实例”的概念：<br>\\n当你把一个Java服务（如淘票票的支付服务）打包成Jar/War包后，<strong>每启动一次这个Jar包，就生成一个“服务实例”</strong>。每个实例拥有独立的内存空间、线程池，运行在独立的进程中（甚至不同的服务器上）。</p>\"}")
export { comp, data }
